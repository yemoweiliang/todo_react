[{"/Users/richuli/Documents/project/warm-up/src/index.js":"1","/Users/richuli/Documents/project/warm-up/src/reportWebVitals.js":"2","/Users/richuli/Documents/project/warm-up/src/App.js":"3","/Users/richuli/Documents/project/warm-up/src/components/todo/toDo.js":"4","/Users/richuli/Documents/project/warm-up/src/redux/store.js":"5","/Users/richuli/Documents/project/warm-up/src/redux/reducer.js":"6","/Users/richuli/Documents/project/warm-up/src/components/todo/addItem.js":"7","/Users/richuli/Documents/project/warm-up/src/redux/action.js":"8"},{"size":622,"mtime":1607109016357,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607060346786,"results":"11","hashOfConfig":"10"},{"size":186,"mtime":1607109378150,"results":"12","hashOfConfig":"10"},{"size":2800,"mtime":1607382669649,"results":"13","hashOfConfig":"10"},{"size":107,"mtime":1607072437849,"results":"14","hashOfConfig":"10"},{"size":969,"mtime":1607382606380,"results":"15","hashOfConfig":"10"},{"size":1158,"mtime":1607100962466,"results":"16","hashOfConfig":"10"},{"size":436,"mtime":1607110658417,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"mt78zt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/richuli/Documents/project/warm-up/src/index.js",[],["37","38"],"/Users/richuli/Documents/project/warm-up/src/reportWebVitals.js",[],"/Users/richuli/Documents/project/warm-up/src/App.js",[],"/Users/richuli/Documents/project/warm-up/src/components/todo/toDo.js",["39"],"import React from 'react';\nimport { connect } from \"react-redux\"\nimport AddItem from './addItem'\nimport {removeItemAction,updateItemAction} from \"../../redux/action\"\nimport './toDo.css';\nclass ToDo extends React.Component {\n  constructor(props) {\n    super(props);\n    var items=[...props.items]\n    this.state={items:items}\n  }\n\n  showItem(item) {\n    \n    var ind=this.state.items.findIndex((it)=>(it.id==item.id))\n    var edit=this.state.items[ind].editMode?item.editMode:false\n    return <li key={item.id} className={edit?\"editMode\":''}>\n      <input type=\"checkbox\" \n        defaultChecked={item.completed} \n        onClick={()=>{\n          this.props.updateItemAction(item.id,{completed:!item.completed})\n        }}/>\n    <label>{item.body}</label>\n      <input type=\"text\" value={item.body} onChange={(e)=>{\n        var newItems=[...this.state.items]\n        newItems[ind].body=e.target.value\n        this.setState({items:newItems})\n        this.props.updateItemAction(item.id,{body:e.target.value})\n      }}/>\n        <button className=\"edit\" onClick={()=>{\n          edit=!edit\n          \n          var newItems=[...this.state.items]\n          newItems[ind].editMode=edit\n          this.setState({items:newItems})\n          this.props.updateItemAction(item.id,{editMode:edit})\n          }}>Edit</button>\n        <button className=\"delete\" onClick={()=>{\n          this.props.removeItemAction(item.id)\n        }}   >Delete</button></li>\n  }\n  componentWillReceiveProps(nextProps){\n    if(JSON.stringify(nextProps.items)!==JSON.stringify(this.props.items)){\n      this.setState({items:[...nextProps.items]})\n      \n    }\n  }\n  render() {\n      \n      return (\n      <div className=\"container\">\n          <AddItem/>\n      <h3>Todo</h3>\n      <ul id=\"incomplete-tasks\">\n          {this.props.incompleteItems.map((item,index)=>{\n            return this.showItem(item)\n          })}\n      </ul>\n      \n      <h3>Completed</h3>\n      <ul id=\"completed-tasks\">\n        <li>\n          {this.props.completedItems.map((item,index)=>{\n            return this.showItem(item)\n          })}\n        </li>\n      </ul>\n\n\n      </div>\n      )\n      \n      \n    }\n  }\n\n\nconst mapStateToProps=state=>{\n  var completedItems=state.items.filter((item)=>(item.completed))\n  var incompleteItems=state.items.filter((item)=>!item.completed)\n  var totalItems=state.items.length\n  return{\n    completedItems:completedItems,\n    incompleteItems:incompleteItems,\n    items:state.items,\n    totalItems:totalItems\n  }\n}\nconst mapDispatchToProps=(dispatch)=>{\n  return {\n    updateItemAction:(id,payload)=>{\n          \n          dispatch(updateItemAction(id,payload))\n      },\n      removeItemAction:(id)=>{\n        dispatch(removeItemAction(id))\n      }\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(ToDo)","/Users/richuli/Documents/project/warm-up/src/redux/store.js",[],"/Users/richuli/Documents/project/warm-up/src/redux/reducer.js",[],"/Users/richuli/Documents/project/warm-up/src/components/todo/addItem.js",[],["40","41"],"/Users/richuli/Documents/project/warm-up/src/redux/action.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":15,"column":52,"nodeType":"48","messageId":"49","endLine":15,"endColumn":54},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["52"],["53"],"no-global-assign","no-unsafe-negation"]